/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package atividadeavaliativa01;

import java.awt.Image;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author dijan
 */
public class JFrameEditarUsuario extends javax.swing.JFrame {

    /**
     * Creates new form JFrameGerenciarUsuarios
     */
    public static ArrayList<Cadastro> db = new ArrayList<>();
    private boolean novoUsuario = false;
    public static int index = 0;
    JFrameGerenciarUsuarios gerenciarUsuarios;

    public JFrameEditarUsuario(ArrayList<Cadastro> cadastro, int index) {
        this.db = cadastro;
        this.index = index;
        initComponents();
        this.iniciarComponente();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelImage = new javax.swing.JLabel();
        labelNome = new javax.swing.JLabel();
        labelIdade = new javax.swing.JLabel();
        labelAltura = new javax.swing.JLabel();
        labelEstado = new javax.swing.JLabel();
        labelCidade = new javax.swing.JLabel();
        labelEndereco = new javax.swing.JLabel();
        inputNome = new javax.swing.JTextField();
        inputIdade = new javax.swing.JTextField();
        inputAltura = new javax.swing.JTextField();
        inputCidade = new javax.swing.JTextField();
        inputEndereco = new javax.swing.JTextField();
        avancar = new javax.swing.JButton();
        voltar = new javax.swing.JButton();
        limparFormulario = new javax.swing.JButton();
        escolherImagem = new javax.swing.JButton();
        inputUf = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelImage.setBackground(new java.awt.Color(123, 123, 123));
        labelImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelImage.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.lightGray, java.awt.Color.white));
        labelImage.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        labelImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelImageMouseClicked(evt);
            }
        });

        labelNome.setText("Nome:");

        labelIdade.setText("Data de nascimento:");

        labelAltura.setText("Altura:");

        labelEstado.setText("Estado:");

        labelCidade.setText("Cidade:");

        labelEndereco.setText("Endereço:");

        inputNome.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        inputNome.setMaximumSize(new java.awt.Dimension(20, 14));
        inputNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNomeActionPerformed(evt);
            }
        });

        inputIdade.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        inputIdade.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                inputIdadeCaretUpdate(evt);
            }
        });
        inputIdade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputIdadeActionPerformed(evt);
            }
        });
        inputIdade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputIdadeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputIdadeKeyTyped(evt);
            }
        });

        inputAltura.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        inputCidade.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        inputEndereco.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        inputEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputEnderecoActionPerformed(evt);
            }
        });

        avancar.setText("Salvar");
        avancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avancarActionPerformed(evt);
            }
        });

        voltar.setText("Cancelar");
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });

        limparFormulario.setText("Limpar formulario");
        limparFormulario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparFormularioActionPerformed(evt);
            }
        });

        escolherImagem.setText("Escolher foto");
        escolherImagem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                escolherImagemMouseClicked(evt);
            }
        });
        escolherImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                escolherImagemActionPerformed(evt);
            }
        });

        inputUf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Acre - AC", "Alagoas - AL", "Amapá - AP", "Amazonas - AM", "Bahia - BA", "Ceará - CE", "Distrito Federal - DF", "Espirito Santo - ES", "Goiás - GO", "Maranhão - MA", "Mato Grosso do Sul - MS", "Mato Grosso - MT", "Minas Gerais - MG", "Pará - PA", "Paraíba - PB", "Paraná - PR", "Pernambuco - PE", "Piauí - PI", "Rio de Janeiro - RJ", "Rio Grande do Norte - RN", "Rio Grande do Sul - RS", "Rondônia - RO", "Roraima - RR", "Santa Catarina - SC", "São Paulo - SP", "Sergipe - SE", "Tocantins - TO" }));
        inputUf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputUfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(voltar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(labelNome, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(labelIdade))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(inputNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(inputIdade)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(labelEstado)
                                            .addComponent(labelAltura)
                                            .addComponent(labelEndereco))
                                        .addGap(23, 23, 23)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(inputAltura)
                                            .addComponent(inputEndereco)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(inputUf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(labelCidade)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(inputCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE)))))))
                        .addGap(18, 18, 18)
                        .addComponent(avancar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelImage, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 446, Short.MAX_VALUE)
                                .addComponent(limparFormulario))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(escolherImagem)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelImage, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(limparFormulario)
                    .addComponent(escolherImagem, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNome))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelIdade)
                    .addComponent(inputIdade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputAltura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAltura))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEstado)
                    .addComponent(inputUf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCidade)
                    .addComponent(inputCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEndereco))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(avancar)
                    .addComponent(voltar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputNomeActionPerformed
        // TODO add your handling code here:
//        System.out.println("Boaa " + cadastro.get(0).getNome());
//        this.inputNome.setText(cadastro.get(0).getNome());
    }//GEN-LAST:event_inputNomeActionPerformed

    private void inputIdadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputIdadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputIdadeActionPerformed

    private void inputEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputEnderecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputEnderecoActionPerformed

    private void avancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avancarActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Date data;
        try {
//            data = formato.parse("23/11/1995");
            data = formato.parse(this.inputIdade.getText());
            String estadoSelecionado = this.inputUf.getSelectedItem().toString();

            String estado = estadoSelecionado.substring(0, estadoSelecionado.length() - 5);
            String uf = estadoSelecionado.substring(estadoSelecionado.length() - 2, estadoSelecionado.length());

            Estado novoEstado = new Estado(uf, estado);

            Cadastro cd = new Cadastro(
                    this.inputNome.getText(),
                    this.inputEndereco.getText(),
                    novoEstado,
                    this.inputCidade.getText(),
                    data,
                    Float.parseFloat(this.inputAltura.getText()),
                    355,
                    (ImageIcon) this.labelImage.getIcon()
            );

            this.db.set(index, cd);
        } catch (ParseException ex) {
            Logger.getLogger(JFrameEditarUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            this.escrever_arquivo();
//            changeFormItems();
            this.setVisible(false);
            this.gerenciarUsuarios.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(JFrameEditarUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }

        this.limparComponente();
    }//GEN-LAST:event_avancarActionPerformed

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        // TODO add your handling code here:
        this.limparComponente();
        this.setVisible(false);
        this.gerenciarUsuarios.setVisible(true);
    }//GEN-LAST:event_voltarActionPerformed

    private void labelImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelImageMouseClicked
        // TODO add your handling code here:
//        JOptionPane.
        JFileChooser fc = new JFileChooser();
        int result = fc.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            try {
                this.labelImage.setIcon(lidarComImagem(new ImageIcon(ImageIO.read(file))));
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_labelImageMouseClicked

    private void limparFormularioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparFormularioActionPerformed
        // TODO add your handling code here:
        this.limparComponente();
    }//GEN-LAST:event_limparFormularioActionPerformed

    private void escolherImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_escolherImagemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_escolherImagemActionPerformed

    private void escolherImagemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_escolherImagemMouseClicked
        // TODO add your handling code here:
        this.labelImageMouseClicked(evt);
    }//GEN-LAST:event_escolherImagemMouseClicked

    private void inputIdadeCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_inputIdadeCaretUpdate
        // TODO add your handling code here:
//        String data = this.inputIdade.getText().replaceAll("\\D", "");
////        String dataFormatada = data.replaceAll("(\\d{2})(\\d{2})(\\d{4})", "$1/$2/$3");
//
////        System.out.println("Atualizado " + dataFormatada);
//        if (data.length() > 2 && data.length() < 5) {
//            this.inputIdade.setText(data.replaceAll("(\\d{2})(\\d)", "$1/$2"));
//        } else if (data.length() > 4) {
//            this.inputIdade.setText(data.replaceAll("(\\d{2})(\\d{2})(\\d)", "$1/$2/$3"));
//        } else {
//            System.out.println("Aqui " + data);
//            this.inputIdade.setText("");
//        }

    }//GEN-LAST:event_inputIdadeCaretUpdate

    private void inputIdadeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputIdadeKeyTyped
        // TODO add your handling code here:
//        String data = this.inputIdade.getText().replaceAll("\\D", "");
////        String dataFormatada = data.replaceAll("(\\d{2})(\\d{2})(\\d{4})", "$1/$2/$3");
//        if (data.length() > 7) {
//            System.out.println("aqui " + data.substring(0, 8));
//            this.inputIdade.setText(data.substring(0, 8).replaceAll("(\\d{2})(\\d{2})(\\d{4})", "$1/$2/$3"));
//            return;
//        }
//            System.out.println("aqui1 " + this.inputIdade.getText());
//        if (data.length() > 2 && data.length() < 5) {
//            System.out.println("aqui " + (data.length() > 2 && data.length() < 5));
//           
//            this.inputIdade.setText(data.replaceAll("(\\d{2})(\\d+)", "$1/$2"));
//        } else if (data.length() > 4) {
//            this.inputIdade.setText(data.replaceAll("(\\d{2})(\\d{2})(\\d)", "$1/$2/$3"));
//        } else {
//            this.inputIdade.setText(data);
//        }
    }//GEN-LAST:event_inputIdadeKeyTyped

    private void inputIdadeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputIdadeKeyReleased
//         TODO add your handling code here:
        String data = this.inputIdade.getText().replaceAll("\\D", "");
//        String dataFormatada = data.replaceAll("(\\d{2})(\\d{2})(\\d{4})", "$1/$2/$3");
        if (data.length() > 7) {
            this.inputIdade.setText(data.substring(0, 8).replaceAll("(\\d{2})(\\d{2})(\\d{4})", "$1/$2/$3"));
            return;
        }
        System.out.println("aqui1 " + this.inputIdade.getText());
        if (data.length() > 2 && data.length() < 5) {
            this.inputIdade.setText(data.replaceAll("(\\d{2})(\\d+)", "$1/$2"));
        } else if (data.length() > 4) {
            this.inputIdade.setText(data.replaceAll("(\\d{2})(\\d{2})(\\d)", "$1/$2/$3"));
        } else {
            this.inputIdade.setText(data);
        }
    }//GEN-LAST:event_inputIdadeKeyReleased

    private void inputUfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputUfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputUfActionPerformed

    private void limparComponente() {
        this.inputNome.setText("");
        this.inputIdade.setText("");
        this.inputAltura.setText("");
        this.inputUf.setSelectedIndex(0);
        this.inputCidade.setText("");
        this.inputEndereco.setText("");
        this.labelImage.setIcon(lidarComImagem(new ImageIcon("default.jpg")));
    }

    private void iniciarComponente() {
        if (!db.isEmpty()) {
            this.inputUf.setSelectedItem(db.get(this.index).getEstado().nome + " - " + db.get(this.index).getEstado().sigla);
            this.inputNome.setText(db.get(this.index).getNome());
            this.inputIdade.setText(db.get(this.index).getIdade().toString());
            this.inputAltura.setText(String.valueOf(db.get(this.index).getAltura()));
            this.inputCidade.setText(db.get(this.index).getCidade());
            this.inputEndereco.setText(db.get(this.index).getEndereco());
            this.labelImage.setIcon(lidarComImagem(db.get(this.index).getFoto()));
        }

        this.labelImage.setIcon(lidarComImagem(new ImageIcon("default.jpg")));
    }

    public static void setDb(ArrayList<Cadastro> db) {
        JFrameEditarUsuario.db = db;
    }

    public static void setIndex(int index) {
        JFrameEditarUsuario.index = index;
    }

    private ImageIcon lidarComImagem(ImageIcon imagem) {
        ImageIcon imageIcon = imagem;
        Image image = imageIcon.getImage();
        Image newimg = image.getScaledInstance(114, 114, java.awt.Image.SCALE_SMOOTH);

        return new ImageIcon(newimg);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameEditarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameEditarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameEditarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameEditarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameEditarUsuario(db, index).setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton avancar;
    private javax.swing.JButton escolherImagem;
    private javax.swing.JTextField inputAltura;
    private javax.swing.JTextField inputCidade;
    private javax.swing.JTextField inputEndereco;
    private javax.swing.JTextField inputIdade;
    private javax.swing.JTextField inputNome;
    private javax.swing.JComboBox<String> inputUf;
    private javax.swing.JLabel labelAltura;
    private javax.swing.JLabel labelCidade;
    private javax.swing.JLabel labelEndereco;
    private javax.swing.JLabel labelEstado;
    private javax.swing.JLabel labelIdade;
    private javax.swing.JLabel labelImage;
    private javax.swing.JLabel labelNome;
    private javax.swing.JButton limparFormulario;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables

    void setGerenciarUsuarios(JFrameGerenciarUsuarios gerenciarUsuarios) {
        this.gerenciarUsuarios = gerenciarUsuarios;
    }

    public void escrever_arquivo() throws IOException {

//        BufferedWriter buffWrite = new BufferedWriter(new FileWriter("bd.txt", StandardCharsets.ISO_8859_1, false));
        try {
            FileOutputStream writeData = new FileOutputStream("bd.txt");

            ObjectOutputStream writeStream = new ObjectOutputStream(writeData);

            writeStream.writeObject(db);
            writeStream.flush();
            writeStream.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
